{"version":3,"file":"main.js","sources":["../../src/js/main.js"],"sourcesContent":["// DOM elements\nconst container = document.getElementById('js-app');\n// Data\nconst tickerFetchUrl = \"https://blockchain.info/ticker\";\n\nlet fetchedData;\n\nasync function fetchData(){\n    try {\n        fetchedData = await fetch(tickerFetchUrl);\n        fetchedData = await fetchedData.json();\n    } catch (error) {\n        console.log('No data');\n    } finally {\n        dataFetched();\n    }\n}\n\n// Useful utility functions\n\nfunction buildElement(ElementType, elementClassName){\n    const domElement = document.createElement(ElementType);\n    domElement.classList.add(elementClassName);\n    return domElement;\n}\n\nfunction getPercentage(unitPrice){\n    return Math.floor(unitPrice * 100);\n}\n\nfunction dataFetched(){\n\n    function additionalDetails(price, currencyName, smallUnitName){\n        this.currencyName = currencyName;\n        this.unitPrice = price / 100000000;\n        this.unitPercentage = getPercentage(this.unitPrice);\n        this.smallUnitName = smallUnitName;\n        this.smallestUnitPrice = this.currencyName === this.smallUnitName ? this.unitPrice : price * 100 / 100000000;\n        this.smallestUnitPercentage = getPercentage(this.smallestUnitPrice);\n        this.smallestUnitKilled = this.currencyName != this.smallUnitName && this.smallestUnitPercentage > 100;\n    }\n\n    function addToDOM(unitName, smallUnitName, unitPercentage, smallestUnitPercentage,  smallestUnitKilled){\n        const item = buildElement('li', 'c-currencyitem');\n        const itemMain = buildElement('div', 'c-currencyitem__main');\n        const itemText = buildElement('span', 'c-currencyitem__text');\n        let itemTextString;\n        let itemTextStringsmall;\n        itemMain.append(itemText);\n        const percentageBar = (percentage) => {\n            const width = percentage > 100 ? 100 : percentage;\n            const element = buildElement('span', 'c-currencyitem__percentage-bar');\n            element.style.width = width + '%';\n            return element;\n        };\n        if (smallestUnitPercentage > 100) {\n            item.classList.add('c-currencyitem--complete');\n        }\n        if (smallestUnitKilled){\n            item.classList.add('c-currencyitem--smallest-complete');\n            // main title\n            itemTextString = `${unitName} ${unitPercentage}%`;\n            itemTextStringsmall = `${smallUnitName} ${smallestUnitPercentage}%`;\n            itemText.innerText = itemTextStringsmall;\n            item.addEventListener('mouseenter',() => {\n                itemText.innerText = itemTextString;\n            });\n            item.addEventListener('mouseleave',() => {\n                itemText.innerText = itemTextStringsmall;\n            });\n            item.append(itemMain);\n            itemMain.append(percentageBar(smallestUnitPercentage));\n        } else {\n            // main title\n            itemTextString = smallUnitName < 1 ? `${smallestUnitPercentage} <1%` : `${smallUnitName} ${smallestUnitPercentage}%`;\n            itemText.innerText = itemTextString;\n            item.append(itemMain);\n            itemMain.append(percentageBar(smallestUnitPercentage));\n        }\n\n        currencyGrid.append(item);\n    }\n\n    function sortData(){\n        fetchedData = Object.entries(fetchedData);\n        fetchedData.sort((a, b) => a[1].smallestUnitPercentage - b[1].smallestUnitPercentage);\n        fetchedData = Object.fromEntries(fetchedData);\n    }\n\n\n    function addCurrencyDetails(symbol, price, data){\n        switch (symbol) {\n            case \"ARS\" : {\n                const newData = new additionalDetails(price, 'Argentine Peso', 'Argentine Peso');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"AUD\" : {\n                const newData = new additionalDetails(price, 'Australian Dollar', 'Australian Cent');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"BRL\" : {\n                const newData = new additionalDetails(price, 'Brazilian Real', 'Brazilian Centavo');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"CAD\" : {\n                const newData = new additionalDetails(price, 'Canadian Dollar', 'Canadian Cent');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"CHF\" : {\n                const newData = new additionalDetails(price, 'Swiss Franc', 'Swiss Rappen');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"CLP\" : {\n                const newData = new additionalDetails(price, 'Chilean Peso', 'Chilean Peso');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"CNY\" : {\n                const newData = new additionalDetails(price, 'Chinese Yuan', 'Chinese Fen');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"CZK\" : {\n                const newData = new additionalDetails(price, 'Czech Koruna', 'Czech Haléř');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"DKK\" : {\n                const newData = new additionalDetails(price, 'Danish Krone', 'Danish Øre');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"EUR\" : {\n                const newData = new additionalDetails(price, 'Euro', 'Euro Cent');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"GBP\" : {\n                const newData = new additionalDetails(price, 'Pound Sterling', 'British Penny');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"HKD\" : {\n                const newData = new additionalDetails(price, 'Hong Kong Dollar', 'Hong Kong Cent');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"HRK\" : {\n                const newData = new additionalDetails(price, 'Croatian Kuna', 'Croatian Lipa');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"HUF\" : {\n                const newData = new additionalDetails(price, 'Hungarian Forint', 'Hungarian Forint');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"INR\" : {\n                const newData = new additionalDetails(price, 'Indian Rupee', 'Indian Paisa');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"ISK\" : {\n                const newData = new additionalDetails(price, 'Icelandic Króna', 'Icelandic Króna');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"JPY\" : {\n                const newData = new additionalDetails(price, 'Japanese Yen', 'Japanese Yen');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"KRW\" : {\n                const newData = new additionalDetails(price, 'South Korean Won', 'South Korean Won');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"NZD\" : {\n                const newData = new additionalDetails(price, 'New Zealand Dollar', 'New Zealand Cent');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"PLN\" : {\n                const newData = new additionalDetails(price, 'Polish Złoty', 'Polish Grosz');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"RON\" : {\n                const newData = new additionalDetails(price, 'Romanian Leu', 'Romanian Ban');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"RUB\" : {\n                const newData = new additionalDetails(price, 'Russian Ruble', 'Russian Kopek');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"SEK\" : {\n                const newData = new additionalDetails(price, 'Swedish Krona', 'Swedish Öre');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"SGD\" : {\n                const newData = new additionalDetails(price, 'Singapore Dollar', 'Singapore Cent');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"THB\" : {\n                const newData = new additionalDetails(price, 'Thai Baht', 'Thai Satang');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"TRY\" : {\n                const newData = new additionalDetails(price, 'Turkish Lira', 'Turkish Kuruş');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"TWD\" : {\n                const newData = new additionalDetails(price, 'New Taiwan Dollar', 'Taiwanese Cent');\n                Object.assign(data, newData);\n                break;\n            }\n            case \"USD\" : {\n                const newData = new additionalDetails(price, 'United States Dollar', 'United States Cent');\n                Object.assign(data, newData);\n                break;\n            }\n        }\n        \n    };\n\n\n    // Do stuff --------------------------------------------\n\n    const currencyGrid = buildElement('ul', 'o-currencygrid');\n    container.append(currencyGrid);\n\n    for (const currencyItem in fetchedData) {\n        let details = fetchedData[currencyItem];\n        const symbol = details['symbol'];\n        const price = details['sell'];\n        const deleteDeets = ['15m', 'buy', 'last'];\n        deleteDeets.forEach((item) => {\n            delete details[item];\n        })\n        addCurrencyDetails(symbol, price, details);\n    }\n\n    sortData();\n\n    for (const currencyItem in fetchedData) {\n        let details = fetchedData[currencyItem];\n        addToDOM(details['currencyName'], details['smallUnitName'], details['unitPercentage'], details['smallestUnitPercentage'], details['smallestUnitKilled']);\n    }\n\n};\n\n\nfetchData();\n\nfunction nostrKeyDisplay(){\n\n    const nostrPubKey = \"npub1y73ajm09j3wra8jj9e3h8rkj3xculh520m9plgc6j57rkg7g0yyqt5p5dt\";\n    const nostrPubKeyFirstPart = () => {\n        return nostrPubKey.substring(0, 15);\n    }\n    const nostrPubKeyLastPart = () => {\n        return nostrPubKey.slice(-15);\n    }\n    const nostrPubKeyDisplay = `${nostrPubKeyFirstPart()}...${nostrPubKeyLastPart()}`;\n    const copySuccessMessage = buildElement('span','c-nostr-copy__message');\n    copySuccessMessage.innerHTML = 'Copied';\n    const nostrContainer = document.getElementById('js-nostr-key');\n    const nostrButton = document.getElementById('js-nostr-copy');\n    const copyIcon = document.querySelector('.js-copy-icon');\n    \n    nostrContainer.innerText = nostrPubKeyDisplay;\n    \n    nostrButton.addEventListener('click', () => {\n        copyKey();\n    });\n\n    function copyFeedback(){\n        nostrButton.append(copySuccessMessage);\n        copyIcon.remove();\n        console.log('copied');\n        setTimeout(() => {\n            nostrButton.append(copyIcon);\n            copySuccessMessage.remove();\n        }, 2000)\n    }\n\n    function copyKey(){\n        navigator.clipboard.writeText(nostrPubKey)\n        .then(function() {\n            console.log('copied');\n            copyFeedback();\n        })\n        .catch(function(err) {\n            console.error('Failed to copy text to clipboard: ', err);\n        });\n    }\n}\n\nnostrKeyDisplay();"],"names":["container","document","getElementById","fetchedData","buildElement","ElementType","elementClassName","domElement","createElement","classList","add","getPercentage","unitPrice","Math","floor","async","fetch","json","error","console","log","additionalDetails","price","currencyName","smallUnitName","this","unitPercentage","smallestUnitPrice","smallestUnitPercentage","smallestUnitKilled","addToDOM","unitName","item","itemMain","itemText","itemTextString","itemTextStringsmall","append","percentageBar","percentage","width","element","style","innerText","addEventListener","currencyGrid","sortData","Object","entries","sort","a","b","fromEntries","addCurrencyDetails","symbol","data","newData","assign","currencyItem","details","forEach","dataFetched","fetchData","nostrPubKey","nostrPubKeyDisplay","substring","slice","copySuccessMessage","innerHTML","nostrContainer","nostrButton","copyIcon","querySelector","navigator","clipboard","writeText","then","remove","setTimeout","catch","err","nostrKeyDisplay"],"mappings":"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"}